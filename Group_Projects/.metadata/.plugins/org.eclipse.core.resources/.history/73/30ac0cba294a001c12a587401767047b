/**********************************************************/
/* !Author      : Abdullah M. Abdullah			          */
/* !Description : 										  */
/* !Version     : v1.0									  */
/* !Date        : 20 NOV, 2021                            */
/**********************************************************/

#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"

#include "USART_interface.h"
#include "USART_private.h"
#include "USART_config.h"

#define F_CPU		8000000UL
void USART_voidInit(void)
{   	/*Select UCSRC*/
	SET_BIT(UCSRC, UCSRC_URSEL);
	/*Set the USART in Asynch mode*/
	CLR_BIT(UCSRC, UCSRC_UMSEL);

	/*Data = 8-bit*/
	SET_BIT(UCSRC, UCSRC_UCSZ0);
	SET_BIT(UCSRC, UCSRC_UCSZ1);
	CLR_BIT(UCSRB, UCSRB_UCSZ2);

	/*Parity Disabled*/
	CLR_BIT(UCSRC, UCSRC_UPM0);
	CLR_BIT(UCSRC, UCSRC_UPM1);

	/*Stop = 1-bit*/
	CLR_BIT(UCSRC, UCSRC_USBS);

	/*Set the baudrate to be 9600*/
	UBRRL = 103;

	/*Enable Transmitter & Receiver */
	SET_BIT(UCSRB, UCSRB_TXEN);
	SET_BIT(UCSRB, UCSRB_RXEN);
}



void USART_voidTransmitData(u8 Copy_u8Data)
{
    /*Polling On The UDRE Flag*/
    while(GET_BIT(UCSRA, UCSRA_UDRE) == 0); // while(!GET_BIT(UCSRA, UCSRA_UDRE));
    SET_BIT(UCSRA, UCSRA_UDRE);
    /*Copy The Data To Be Transmitted To The UDR Register*/
    UDR = Copy_u8Data;
    /*Polling (Busy Wait) On The TXC Flag */
//    while(GET_BIT(UCSRA, UCSRA_TXC) == 0);  // while(!GET_BIT(UCSRA, UCSRA_TXC));
}


u8 USART_u8ReceiveData(void)
{
    /*Polling (Busy Wait) On The RXC Flag*/
    while(GET_BIT(UCSRA, UCSRA_RXC) == 0);  // while(!GET_BIT(UCSRA, UCSRA_RXC));
    SET_BIT(UCSRA, UCSRA_RXC);
    return UDR;
}
