/**********************************************************/
/* !Author      : Abdullah M. Abdullah			          */
/* !Description : 										  */
/* !Version     : v1.0									  */
/* !Date        : 20 NOV, 2021                            */
/**********************************************************/

#include "../../LIB/BIT_MATH.h"
#include "../../LIB/STD_TYPES.h"

#include "USART_interface.h"
#include "USART_private.h"
#include "USART_config.h"


void USART_voidInit(void)
{
    /*Enable Trasmitter & Receiver Circuits*/
    SET_BIT(UCSRB, UCSRB_TXEN);
    SET_BIT(UCSRB, UCSRB_RXEN);
    /*BaudRate = 9600*/
    UBRRL = 0x33;
    /*Set Bit URSEL To Write On UCSRC*/
    SET_BIT(UCSRC, UCSRC_URSEL);
    /*Data Size = 8-bit*/
    SET_BIT(UCSRC, UCSRC_UCSZ0);
    SET_BIT(UCSRC, UCSRC_UCSZ1);
    CLR_BIT(UCSRB, UCSRB_UCSZ2);

    /*Stop bit = 1-bit*/
    CLR_BIT(UCSRC, UCSRC_USBS);

    /*Parity Mode = Disabled*/
    CLR_BIT(UCSRC, UCSRC_UPM0);
    CLR_BIT(UCSRC, UCSRC_UPM1);

    /*USART Mode = Asychnronous*/
    CLR_BIT(UCSRC, UCSRC_UMSEL);


    /*Clear Bit URSEL To Write On UBRRH*/
//    CLR_BIT(UBRRH, UBRRH_URSEL);            // CLR_BIT(UCSRC, UCSRC_URSEL);
//    UBRRH = 0;


}

//void USART_voidInit()
//{
////	float Temp = ((float)(FOSC) / (16.0 * BAUD) - 1) + 0.5;
//	UBRRL = 51;
////	UBRRL  =   (u8)(Temp); //BAUDRATE ; // send the first (low) 8 bits of UBRR
////	UBRRH  =  ((u16)Temp >> 8) ; // shift right and sends the high 8 bits of UBRR
//	UCSRB |= (( 1 << 4 ) | ( 1 << 3 )) ; // enable TX and RX in USART to send and recieve
//	 // UCSRC |= (1 << 7);
////	UCSRA |= (1 << 1);
//	UCSRC |= (( 1 << 1 ) | (1 << 7) | ( 1 << 2 ) ) ; // 8 bits data frame , 1 stop bits ,parity mode disabled , Asynchorouns USART
//}

void USART_voidTransmitData(u8 Copy_u8Data)
{
    /*Polling On The UDRE Flag*/
    while(GET_BIT(UCSRA, UCSRA_UDRE) == 0); // while(!GET_BIT(UCSRA, UCSRA_UDRE));
    /*Copy The Data To Be Transmitted To The UDR Register*/
    UDR = Copy_u8Data;
    /*Polling (Busy Wait) On The TXC Flag */
    while(GET_BIT(UCSRA, UCSRA_TXC) == 0);  // while(!GET_BIT(UCSRA, UCSRA_TXC));
}


void USART_u8ReceiveData(u8 * Copy_pu8ReceivedData)
{
    /*Polling (Busy Wait) On The RXC Flag*/
    while(GET_BIT(UCSRA, UCSRA_RXC) == 0);  // while(!GET_BIT(UCSRA, UCSRA_RXC));
    *Copy_pu8ReceivedData = UDR;
}
